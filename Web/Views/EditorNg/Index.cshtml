
@{
    ViewBag.Title = "Index";
}

<h2>CKEditor Example</h2>
<hr />
<div ng-app="ckEditorApp" class="container">
    <div class="row">
        <div class="table-responsive">
            <a href="/editorng/create" class="btn btn-default btn-primary">Create</a>
            <table ng-controller="ckEditorController as ckEditorCtrl" class="table table-bordered">
                <thead>
                    <tr>
                        <td>Id</td>
                        <td>Title</td>
                        <td>&nbsp;</td>
                    </tr>
                </thead>
                <tbody>
                    <tr ng-repeat="item in ckEditorCtrl.items">
                        <td class="id">{{item.id}}</td>
                        <td class="title">{{item.title}}</td>
                        <td class="actions">
                            <button ng-click="ckEditorCtrl.edit(item)" class="edit btn btn-default btn-xs">Edit</button>
                            <button ng-click="ckEditorCtrl.delete(item)" class="delete btn btn-default btn-xs">Delete</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts{
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>
    <script>
        (function () {
            var app = angular.module('ckEditorApp', []);
        })();
    </script>
    <script>
        (function () {

            angular
                .module('ckEditorApp')
                .factory('editorContentService', EditorContentService);

            EditorContentService.$inject = ['$http'];

            function EditorContentService($http) {
                return {
                    getEditorContent: _getEditorContent,
                    deleteEditorContent: _deleteEditorContent
                };

                function _getEditorContent() {
                    console.log('service: get editor content');
                    return $http.get('/api/editor')
                    .then(onSuccessEditorContent)
                    .catch(onError);
                }

                function onSuccessEditorContent(response) {
                    console.log('service: on success editor content');
                    return response.data.items;
                }

                function _deleteEditorContent(data) {
                    console.log('service: delete editor content');
                    return $http.delete('/api/editor/' + data)
                    .then(onDeleteEditorContent)
                    .catch(onError);
                }

                function onDeleteEditorContent(response) {
                    console.log('service: on delete editor content');
                    return response.data;
                }

                function onError(error) {
                    console.log('service: Something went wrong...' + error.data);
                }
            }
        })();
    </script>
    <script>
        (function () {
            var app = angular.module('ckEditorApp');

            app.controller('ckEditorController', ckEditorController);
            ckEditorController.$inject = ['$scope', 'editorContentService'];

            function ckEditorController($scope, editorContentService) {
                var vm = this;
                vm.$scope = $scope;
                vm.items = [];
                vm.currentItem = null;
                vm.editorContentService = editorContentService;
                vm.edit = _edit;
                vm.delete = _delete;

                render();

                function render() {
                    console.log('controller: rendering content');
                    return getEditorContent()
                        .then(onSuccessEditorContent);
                }

                function getEditorContent() {
                    console.log('controller: getting editor content');
                    return vm.editorContentService.getEditorContent()
                        .then(fillEditorContent);
                }

                function fillEditorContent(data) {
                    console.log('controller: filling editor content');
                    vm.items = data;
                    return vm.items
                }

                function onSuccessEditorContent() {
                    console.log('controller: Successfully recieved content');
                }

                function _delete(item) {
                    console.log('controller: deleting item');
                    vm.currentItem = item;
                    return deleteEditorContent(item.id)
                        .then(onSuccessDeleteEditorContent);
                }

                function deleteEditorContent(data) {
                    console.log('controller: deleting editor content');
                    return vm.editorContentService.deleteEditorContent(data)
                        .then(spliceEditorContent);
                }

                function spliceEditorContent() {
                    console.log('controller: splicing editor content');
                    var index = vm.items.indexOf(vm.currentItem);
                    vm.items.splice(index, 1);
                }

                function onSuccessDeleteEditorContent() {
                    console.log('controller: Successfully deleted content');
                }

                function _edit(item) {
                    window.location = '/editor/' + item.id + '/edit';
                }
            }
        })();
    </script>
}